{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport { withOrientationChange } from 'react-device-detect';\nimport BrowserLayout from '../../components/browser/Layout';\nimport MobileLayout from '../../components/mobile/Layout';\nimport MobileDetails from '../../components/mobile/Details';\nimport GaugeChart from '../../components/mobile/GaugeChart';\nimport TankCarousel from '../../components/TankCarousel'; // import Layout from '../../../components/Layout'\n// import MobileLayout from '../../../components/MobileLayout'\n// import MobileCarousel from '../../../components/MobileCarousel'\n// import FullDetails from '../../../components/FullDetails'\n// import Details from '../../../components/Details'\n\nlet Home = (props, {\n  data,\n  isMobileView\n}) => {\n  const {\n    isLandscape,\n    isPortrait\n  } = props;\n\n  if (isLandscape) {\n    return __jsx(MobileLayout, {\n      company: \"mammoth\",\n      site_name: \"University\",\n      date: \"01/01/2020\",\n      time: \"5:20 PM\"\n    }, __jsx(MobileDetails, {\n      resourceType: \"Water\",\n      alarmOn: 12,\n      alarmOff: 10\n    }, __jsx(GaugeChart, {\n      name: 'Tank 1',\n      currentValue: 7,\n      totalValue: 16,\n      unitOfMeasure: 'ft'\n    }), __jsx(GaugeChart, {\n      name: 'Tank 2',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft'\n    }), __jsx(GaugeChart, {\n      name: 'Tank 3',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft'\n    }), __jsx(GaugeChart, {\n      name: 'Tank 4',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft'\n    })), __jsx(MobileDetails, {\n      resourceType: \"Oil\",\n      alarmOn: 12,\n      alarmOff: 10\n    }, __jsx(GaugeChart, {\n      name: 'Tank 1',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft'\n    })));\n  }\n\n  if (isPortrait) {\n    return __jsx(MobileLayout, {\n      sites: props.data.map((site, i) => __jsx(\"li\", {\n        key: i\n      }, __jsx(Link, {\n        href: `jct/${site.BATTERY.toLowerCase()}`\n      }, __jsx(\"a\", null, site.BATTERY)))),\n      company: \"jct\",\n      site_name: \"University\",\n      date: \"01/01/2020\",\n      time: \"5:20 PM\"\n    }, __jsx(MobileDetails, {\n      resourceType: \"Water\",\n      alarmOn: 12,\n      alarmOff: 10\n    }, __jsx(TankCarousel, {\n      slideNum: 4\n    }, __jsx(GaugeChart, {\n      name: 'Tank 1',\n      currentValue: 7,\n      totalValue: 16,\n      alarmOn: 12,\n      alarmOff: 10,\n      unitOfMeasure: 'ft'\n    }), __jsx(GaugeChart, {\n      name: 'Tank 2',\n      currentValue: 9.6,\n      totalValue: 16,\n      alarmOn: 12,\n      alarmOff: 10,\n      unitOfMeasure: 'ft'\n    }), __jsx(GaugeChart, {\n      name: 'Tank 3',\n      currentValue: 12,\n      totalValue: 16,\n      alarmOn: 12,\n      alarmOff: 10,\n      unitOfMeasure: 'ft'\n    }), __jsx(GaugeChart, {\n      name: 'Tank 4',\n      currentValue: 13,\n      totalValue: 16,\n      alarmOn: 12,\n      alarmOff: 10,\n      unitOfMeasure: 'ft'\n    }), __jsx(GaugeChart, {\n      name: 'Tank 5',\n      currentValue: 9.6,\n      totalValue: 16,\n      alarmOn: 12,\n      alarmOff: 10,\n      unitOfMeasure: 'ft'\n    }), __jsx(GaugeChart, {\n      name: 'Tank 6',\n      currentValue: 9.6,\n      totalValue: 16,\n      alarmOn: 12,\n      alarmOff: 10,\n      unitOfMeasure: 'ft'\n    }))), __jsx(MobileDetails, {\n      resourceType: \"Oil\",\n      alarmOn: 12,\n      alarmOff: 10\n    }, __jsx(GaugeChart, {\n      name: 'Tank 1',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft'\n    })));\n  }\n\n  return __jsx(BrowserLayout, {\n    company: \"jct\",\n    sites: props.data.map((site, i) => __jsx(\"li\", {\n      key: i\n    }, __jsx(Link, {\n      href: `jct/${site.BATTERY.toLowerCase()}`\n    }, __jsx(\"a\", null, site.BATTERY))))\n  });\n};\n\nexport async function getServerSideProps(ctx) {\n  const res = await fetch('http://localhost:3001/api/jct');\n  const data = await res.json();\n  let isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i);\n\n  if (isMobileView < 0) {\n    return {\n      props: {\n        isMobileView: false,\n        data\n      }\n    };\n  } else {\n    return {\n      props: {\n        isMobileView: true,\n        data\n      }\n    };\n  }\n}\nHome = withOrientationChange(Home);\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}