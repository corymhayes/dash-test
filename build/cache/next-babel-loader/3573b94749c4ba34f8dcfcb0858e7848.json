{"ast":null,"code":"var _jsxFileName = \"/Users/cor-eee/Projects/jct-next/components/NewMobileDoughnutChart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Doughnut } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { color } from '../public/screensizes';\n\nconst DoughnutChart = props => {\n  const data = {\n    datasets: [{\n      data: [props.currentValue, props.totalValue - props.currentValue],\n      // backgroundColor: [ color.jctOrange, 'rgba(0,0,0, .05)' ],\n      backgroundColor: ctx => {\n        // const i = ctx.dataIndex\n        console.log(ctx.dataset.data[0]);\n\n        if (ctx.dataset.data[0] < props.alarmOff) {\n          return ['lightgreen', 'rgba(0,0,0,.05)'];\n        } else if (ctx.dataset.data[0] > props.alarmOn) {\n          return ['red', 'rgba(0,0,0,.05)'];\n        } else {\n          return ['#ffcc00', 'rgba(0,0,0,.05)'];\n        }\n      },\n      borderWidth: 0\n    }]\n  };\n  return __jsx(GraphContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(GraphTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, props.name), __jsx(Graph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Doughnut, {\n    data: data,\n    width: 100,\n    height: 100,\n    options: {\n      cutoutPercentage: 80,\n      rotation: -1.25 * Math.PI,\n      circumference: 1.5 * Math.PI,\n      tooltips: false,\n      hover: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), __jsx(Volume, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(CurrentVolume, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, props.currentValue !== null ? props.currentValue.toFixed(2) : props.currentValue), __jsx(CurrentVolumeLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, props.unitOfMeasure)));\n};\n\nexport default DoughnutChart;\nconst GraphContainer = styled.div.withConfig({\n  displayName: \"NewMobileDoughnutChart__GraphContainer\",\n  componentId: \"sc-12pdtp-0\"\n})([\"display:grid;grid:20% 1fr / 1fr;place-items:center center;margin-left:2rem;\"]);\nconst GraphTitle = styled.h1.withConfig({\n  displayName: \"NewMobileDoughnutChart__GraphTitle\",\n  componentId: \"sc-12pdtp-1\"\n})([\"grid-column:1;grid-row:1;font-size:2rem;\"]);\nconst Graph = styled.div.withConfig({\n  displayName: \"NewMobileDoughnutChart__Graph\",\n  componentId: \"sc-12pdtp-2\"\n})([\"grid-column:1;grid-row:2;\"]);\nconst Volume = styled.div.withConfig({\n  displayName: \"NewMobileDoughnutChart__Volume\",\n  componentId: \"sc-12pdtp-3\"\n})([\"grid-column:1;grid-row:2;display:flex;align-items:center;justify-content:center;margin-top:1.5rem;\"]);\nconst CurrentVolume = styled.div.withConfig({\n  displayName: \"NewMobileDoughnutChart__CurrentVolume\",\n  componentId: \"sc-12pdtp-4\"\n})([\"font-size:1.8rem;color:\", \";font-weight:bold;\"], color.jctDarkGray);\nconst CurrentVolumeLabel = styled.div.withConfig({\n  displayName: \"NewMobileDoughnutChart__CurrentVolumeLabel\",\n  componentId: \"sc-12pdtp-5\"\n})([\"font-size:1.8rem;color:\", \";align-self:flex-end;margin-bottom:.1rem;margin-left:.2rem;\"], color.jctDarkGray);","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/components/NewMobileDoughnutChart.js"],"names":["Doughnut","styled","color","DoughnutChart","props","data","datasets","currentValue","totalValue","backgroundColor","ctx","console","log","dataset","alarmOff","alarmOn","borderWidth","name","cutoutPercentage","rotation","Math","PI","circumference","tooltips","hover","toFixed","unitOfMeasure","GraphContainer","div","GraphTitle","h1","Graph","Volume","CurrentVolume","jctDarkGray","CurrentVolumeLabel"],"mappings":"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","sourcesContent":["import { Doughnut } from 'react-chartjs-2'\n\nimport styled from 'styled-components'\nimport { color } from '../public/screensizes'\n\n\nconst DoughnutChart = props => {\n  \n  const data = {\n    datasets: [{\n      data: [props.currentValue, (props.totalValue - props.currentValue)],\n      // backgroundColor: [ color.jctOrange, 'rgba(0,0,0, .05)' ],\n      backgroundColor: (ctx) => {\n        // const i = ctx.dataIndex\n        console.log(ctx.dataset.data[0]);\n        if(ctx.dataset.data[0] < props.alarmOff){\n        return [ 'lightgreen', 'rgba(0,0,0,.05)' ]\n      } else if(ctx.dataset.data[0] > props.alarmOn){\n          return [ 'red', 'rgba(0,0,0,.05)' ]\n        } else {\n          return [ '#ffcc00', 'rgba(0,0,0,.05)' ]\n        }\n      },\n      borderWidth: 0\n    }]\n  }\n\n  return (\n    <GraphContainer>\n      <GraphTitle>{props.name}</GraphTitle>\n      <Graph>\n        <Doughnut \n          data={ data }\n          width={ 100 }\n          height={ 100 }\n          options={{ \n            cutoutPercentage: 80, \n            rotation: (-1.25 * Math.PI),\n            circumference: (1.5 * Math.PI),\n            tooltips: false,\n            hover: false\n          }}\n        />\n      </Graph>\n      <Volume>\n        <CurrentVolume>{ props.currentValue !== null ? props.currentValue.toFixed(2) : props.currentValue }</CurrentVolume>\n        <CurrentVolumeLabel>{props.unitOfMeasure}</CurrentVolumeLabel>\n      </Volume>\n    </GraphContainer>\n  )\n}\n\nexport default DoughnutChart    \n\n\nconst GraphContainer = styled.div`\n  display: grid;\n  grid: 20% 1fr / 1fr;\n  place-items: center center;\n  margin-left: 2rem;\n`\nconst GraphTitle = styled.h1`\n  grid-column: 1;\n  grid-row: 1;\n  font-size: 2rem;\n`\n\nconst Graph = styled.div`\n  grid-column: 1;\n  grid-row: 2;\n`\n\nconst Volume = styled.div`\n  grid-column: 1;\n  grid-row: 2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 1.5rem;\n`\n\nconst CurrentVolume = styled.div`\n  font-size: 1.8rem;\n  color: ${color.jctDarkGray};\n  font-weight: bold;\n`\n\nconst CurrentVolumeLabel = styled.div`\n  font-size: 1.8rem;\n  color: ${color.jctDarkGray};\n  align-self: flex-end;\n  margin-bottom: .1rem;\n  margin-left: .2rem;\n`"]},"metadata":{},"sourceType":"module"}