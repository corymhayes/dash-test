{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// import { Component } from 'react'\n// import io from 'socket.io-client'\n// import fetch from 'isomorphic-unfetch'\n// import Layout from '../../components/Layout'\n// import MobileLayout from '../../components/MobileLayout' \n// import Details from '../../components/Details'\nvar Site = /*#__PURE__*/function (_Component) {\n  _inherits(Site, _Component);\n\n  var _super = _createSuper(Site);\n\n  function Site() {\n    _classCallCheck(this, Site);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Site, [{\n    key: \"render\",\n    // static defaultProps = {\n    //   company: []\n    // }\n    // state = {\n    //   companies: []\n    // }\n    // static async getInitialProps(ctx){\n    //   const { name, site } = ctx.query\n    //   const res = await fetch(`http://jct-systems.com/api/${name}/${site}`)\n    //   const json = await res.json();\n    //   let isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i)\n    //   if(isMobileView < 0){\n    //     return {\n    //       isMobileView: false,\n    //       equipment: json[1]\n    //     }\n    //   } else {\n    //     return {\n    //       isMobileView: true,\n    //       equipment: json[1]\n    //     }\n    //   }\n    // }\n    value: function render() {\n      return __jsx(React.Fragment, null) // this.props.isMobileView ?\n      // <MobileLayout company_name=\"Doghouse Oil & Gas\" site_name=\"Anchor Battery\">\n      //     {\n      //       this.props.equipment.map(equip => (\n      //         <Details \n      //           key={equip.id} \n      //           name={equip.name}\n      //           currentValue={equip.currentLevel}\n      //           totalValue={equip.totalLevel}\n      //           alarmOn={equip.on_level}\n      //           alarmOff={equip.off_level}\n      //           mon={equip.monValue}\n      //           tue={equip.tueValue}\n      //           wed={equip.wedValue}\n      //           thu={equip.thuValue}\n      //           fri={equip.friValue}\n      //           sat={equip.satValue}\n      //           sun={equip.sunValue}\n      //         />\n      //       ))\n      //     }\n      //   </MobileLayout>\n      // :       \n      //   <Layout company_name=\"Doghouse Oil & Gas\" site_name=\"Anchor Battery\">\n      //     {\n      //       this.props.equipment.map(equip => (\n      //         <Details \n      //           key={equip.id} \n      //           name={equip.name}\n      //           currentValue={equip.currentLevel}\n      //           totalValue={equip.totalLevel}\n      //           alarmOn={equip.on_level}\n      //           alarmOff={equip.off_level}\n      //           mon={equip.monValue}\n      //           tue={equip.tueValue}\n      //           wed={equip.wedValue}\n      //           thu={equip.thuValue}\n      //           fri={equip.friValue}\n      //           sat={equip.satValue}\n      //           sun={equip.sunValue}\n      //         />\n      //       ))\n      //     }\n      //   </Layout>          \n      ;\n    }\n  }]);\n\n  return Site;\n}(Component);\n\nexport { Site as default };","map":null,"metadata":{},"sourceType":"module"}