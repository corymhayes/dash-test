{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/cor-eee/Projects/jct-next/components/CompanyProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nvar CompanyStateContext = React.createContext();\nvar CompanySetStateContext = React.createContext();\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'SET':\n      return state + action.payload;\n\n    case 'GET':\n      return state;\n\n    default:\n      throw new Error(\"Unknown action: \".concat(action.type));\n  }\n};\n\nexport var CompanyProvider = function CompanyProvider(_ref) {\n  var children = _ref.children;\n  return __jsx(CompanySetStateContext.Provider, {\n    value: setCompanyList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(CompanyStateContext.Provider, {\n    value: companyList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, children));\n};\n_c = CompanyProvider;\nexport var useCompany = function useCompany() {\n  _s();\n\n  return useContext(CompanyListContext);\n};\n\n_s(useCompany, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport var setCompany = function setCompany() {\n  _s2();\n\n  return useContext(CompanySetStateContext);\n};\n\n_s2(setCompany, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyProvider\");","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/components/CompanyProvider.js"],"names":["React","useState","useContext","CompanyStateContext","createContext","CompanySetStateContext","reducer","state","action","type","payload","Error","CompanyProvider","children","setCompanyList","companyList","useCompany","CompanyListContext","setCompany"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,IAAMC,mBAAmB,GAAGH,KAAK,CAACI,aAAN,EAA5B;AACA,IAAMC,sBAAsB,GAAGL,KAAK,CAACI,aAAN,EAA/B;;AAEA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,KAAL;AACE,aAAOF,KAAK,GAAGC,MAAM,CAACE,OAAtB;;AACF,SAAK,KAAL;AACE,aAAOH,KAAP;;AACF;AACE,YAAM,IAAII,KAAJ,2BAA6BH,MAAM,CAACC,IAApC,EAAN;AANJ;AAQD,CATD;;AAWA,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAG/C,SACE,MAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,QADJ,CADF,CADF;AAOD,CAVM;KAAMD,e;AAYb,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa;AAAA;;AAAA,SAAMd,UAAU,CAACe,kBAAD,CAAhB;AAAA,CAAnB;;GAAMD,U;;AACb,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA;;AAAA,SAAMhB,UAAU,CAACG,sBAAD,CAAhB;AAAA,CAAnB;;IAAMa,U","sourcesContent":["import React, { useState, useContext } from 'react'\n\nconst CompanyStateContext = React.createContext()\nconst CompanySetStateContext = React.createContext()\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'SET':\n      return state + action.payload\n    case 'GET':\n      return state\n    default:\n      throw new Error(`Unknown action: ${action.type}`)\n  }\n}\n\nexport const CompanyProvider = ({ children }) => {\n\n\n  return(\n    <CompanySetStateContext.Provider value={setCompanyList}>\n      <CompanyStateContext.Provider value={companyList}>\n        { children }\n      </CompanyStateContext.Provider>\n    </CompanySetStateContext.Provider>\n  )\n}\n\nexport const useCompany = () => useContext(CompanyListContext)\nexport const setCompany = () => useContext(CompanySetStateContext)"]},"metadata":{},"sourceType":"module"}