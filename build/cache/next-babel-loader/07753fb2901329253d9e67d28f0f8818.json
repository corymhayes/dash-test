{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n// import styled from 'styled-components'\n// import fetch from 'isomorphic-unfetch'\n// import Link from 'next/link'\n// import { withOrientationChange } from 'react-device-detect'\n// import BrowserLayout from '../../components/browser/Layout'\n// import MobileLayout from '../../components/mobile/Layout'\n// import MobileDetails from '../../components/mobile/Details'\n// import GaugeChart from '../../components/mobile/GaugeChart'\n// import TankCarousel from '../../components/TankCarousel'\n// import Layout from '../../../components/Layout'\n// import MobileLayout from '../../../components/MobileLayout'\n// import MobileCarousel from '../../../components/MobileCarousel'\n// import FullDetails from '../../../components/FullDetails'\n// import Details from '../../../components/Details'\nvar Home = function Home(props, _ref) {\n  var data = _ref.data,\n      isMobileView = _ref.isMobileView;\n  // const { isLandscape, isPortrait } = props\n  // if(isLandscape){\n  //   return(\n  //     <MobileLayout company=\"mammoth\" site_name='University' date='01/01/2020' time='5:20 PM'>\n  //       <MobileDetails resourceType='Water' alarmOn={12} alarmOff={10}>\n  //         <GaugeChart name={'Tank 1'} currentValue={7} totalValue={16} unitOfMeasure={'ft'} />\n  //         <GaugeChart name={'Tank 2'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n  //         <GaugeChart name={'Tank 3'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n  //         <GaugeChart name={'Tank 4'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n  //       </MobileDetails>\n  //       <MobileDetails resourceType='Oil' alarmOn={12} alarmOff={10}>\n  //         <GaugeChart name={'Tank 1'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n  //       </MobileDetails>\n  //     </MobileLayout>\n  //   )\n  // }\n  // if(isPortrait){\n  //   return(\n  //     <MobileLayout sites={\n  //         props.data.map((site, i) => (\n  //           <li key={i}>\n  //             <Link href={`jct/${site.BATTERY.toLowerCase()}`}><a>{site.BATTERY}</a></Link>\n  //           </li>\n  //         ))\n  //       }company=\"jct\" site_name='University' date='01/01/2020' time='5:20 PM'>\n  //       <MobileDetails resourceType='Water' alarmOn={12} alarmOff={10}>\n  //         <TankCarousel slideNum={4}>\n  //           <GaugeChart name={'Tank 1'} currentValue={7} totalValue={16} alarmOn={12} alarmOff={10} unitOfMeasure={'ft'} />\n  //           <GaugeChart name={'Tank 2'} currentValue={9.6} totalValue={16} alarmOn={12} alarmOff={10} unitOfMeasure={'ft'} />\n  //           <GaugeChart name={'Tank 3'} currentValue={12} totalValue={16} alarmOn={12} alarmOff={10} unitOfMeasure={'ft'} />\n  //           <GaugeChart name={'Tank 4'} currentValue={13} totalValue={16} alarmOn={12} alarmOff={10} unitOfMeasure={'ft'} />\n  //           <GaugeChart name={'Tank 5'} currentValue={9.6} totalValue={16} alarmOn={12} alarmOff={10} unitOfMeasure={'ft'} />\n  //           <GaugeChart name={'Tank 6'} currentValue={9.6} totalValue={16} alarmOn={12} alarmOff={10} unitOfMeasure={'ft'} />\n  //         </TankCarousel>\n  //       </MobileDetails>\n  //       <MobileDetails resourceType='Oil' alarmOn={12} alarmOff={10}>\n  //         <GaugeChart name={'Tank 1'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n  //       </MobileDetails>\n  //     </MobileLayout>\n  //   )\n  // }\n  return (//   <BrowserLayout\n    //     company=\"jct\" \n    //     sites={\n    //       props.data.map((site, i) => (\n    //         <li key={i}>\n    //           <Link href={`jct/${site.BATTERY.toLowerCase()}`}><a>{site.BATTERY}</a></Link>\n    //         </li>\n    //       ))\n    //     }\n    //   />\n    __jsx(React.Fragment, null)\n  );\n}; // export async function getServerSideProps(ctx){\n//   const res = await fetch('http://localhost:3001/api/jct')\n//   const data = await res.json();\n//   let isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i)\n//     if(isMobileView < 0){\n//       return {\n//         props: {\n//           isMobileView: false,\n//           data\n//         }\n//       }\n//     } else {\n//       return {\n//         props: {\n//           isMobileView: true,\n//           data\n//         }\n//       }\n//     }\n// } \n// Home = withOrientationChange(Home)\n\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}