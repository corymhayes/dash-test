{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/cor-eee/Projects/jct-next/pages/[name]/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport NewLayout from '../../components/NewLayout';\nimport { useCompany, setCompany } from '../../components/CompanyProvider';\nimport { useEffect } from 'react';\n\nvar Start = function Start(_ref) {\n  var siteList = _ref.siteList,\n      companyName = _ref.companyName;\n  return __jsx(NewLayout // sites={\n  //   siteList.map(comp => (\n  //     <ul>\n  //       <li>\n  //         <Link href={`${companyName}/${comp.BATTERY}`}>\n  //           <a>{comp.BATTERY}</a>\n  //         </Link>\n  //       </li>\n  //     </ul>\n  //   ))\n  // }\n  , {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  });\n};\n\n_c = Start;\n\nStart.getInitalProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // export async function getServerSideProps(ctx){\n            //   const { name } = ctx.query\n            //   const res = await fetch(`http://localhost:3001/api/${name}`)\n            //   const data = await res.json();\n            console.log('hello');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //   return {\n//     props: { siteList: data, companyName: name}\n//   }\n// } \n\n\nexport default Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/pages/[name]/index.js"],"names":["styled","fetch","Link","NewLayout","useCompany","setCompany","useEffect","Start","siteList","companyName","getInitalProps","ctx","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,kCAAvC;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA+B;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AAC3C,SACE,MAAC,SAAD,CACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAeD,CAhBD;;KAAMF,K;;AAkBNA,KAAK,CAACG,cAAN;AAAA,uEAAuB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAErB;AACE;AACA;AACA;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA,I,CASA;AACA;AACA;AACA;;;AAGA,eAAeN,KAAf","sourcesContent":["import styled from 'styled-components'\nimport fetch from 'isomorphic-unfetch'\nimport Link from 'next/link'\nimport NewLayout from '../../components/NewLayout'\nimport { useCompany, setCompany } from '../../components/CompanyProvider'\nimport { useEffect } from 'react'\n\nconst Start = ({ siteList, companyName }) => {\n  return(\n    <NewLayout \n      // sites={\n      //   siteList.map(comp => (\n      //     <ul>\n      //       <li>\n      //         <Link href={`${companyName}/${comp.BATTERY}`}>\n      //           <a>{comp.BATTERY}</a>\n      //         </Link>\n      //       </li>\n      //     </ul>\n      //   ))\n      // }\n    />\n  )\n}\n\nStart.getInitalProps = async ctx =>{\n  \n  // export async function getServerSideProps(ctx){\n    //   const { name } = ctx.query\n    //   const res = await fetch(`http://localhost:3001/api/${name}`)\n    //   const data = await res.json();\n    console.log('hello');\n  }\n  \n//   return {\n//     props: { siteList: data, companyName: name}\n//   }\n// } \n\n\nexport default Start"]},"metadata":{},"sourceType":"module"}