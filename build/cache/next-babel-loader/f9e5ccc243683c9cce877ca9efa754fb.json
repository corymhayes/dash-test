{"ast":null,"code":"var _jsxFileName = \"/Users/cor-eee/Projects/jct-next/pages/jct/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport { withOrientationChange } from 'react-device-detect';\nimport NewLayout from '../../components/NewLayout';\nimport NewMobileLayout from '../../components/NewMobileLayout';\nimport NewDetails from '../../components/NewDetails';\nimport NewMobileDetails from '../../components/NewMobileDetails';\nimport NewMobileDoughnutChart from '../../components/NewMobileDoughnutChart';\nimport DoughnutChart from '../../components/DoughnutChart';\nimport NewMobileCarousel from '../../components/NewMobileCarousel'; // import Layout from '../../../components/Layout'\n// import MobileLayout from '../../../components/MobileLayout'\n// import MobileCarousel from '../../../components/MobileCarousel'\n// import FullDetails from '../../../components/FullDetails'\n// import Details from '../../../components/Details'\n\nlet Home = (props, {\n  data,\n  isMobileView\n}) => {\n  const {\n    isLandscape,\n    isPortrait\n  } = props;\n\n  if (isLandscape) {\n    return __jsx(NewMobileLayout, {\n      site_name: \"University\",\n      date: \"01/01/2020\",\n      time: \"5:20 PM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(NewMobileDetails, {\n      resourceType: \"Water\",\n      alarmOn: 12,\n      alarmOff: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 1',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 2',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 3',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 4',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 1',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 2',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 3',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 4',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    })), __jsx(NewMobileDetails, {\n      resourceType: \"Oil\",\n      alarmOn: 12,\n      alarmOff: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 1',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  if (isPortrait) {\n    return __jsx(NewMobileLayout, {\n      site_name: \"University\",\n      date: \"01/01/2020\",\n      time: \"5:20 PM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, __jsx(NewMobileDetails, {\n      resourceType: \"Water\",\n      alarmOn: 12,\n      alarmOff: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(NewMobileCarousel, {\n      slideNum: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 1',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 2',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 3',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 4',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 5',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 6',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 7',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 8',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }))), __jsx(NewMobileDetails, {\n      resourceType: \"Oil\",\n      alarmOn: 12,\n      alarmOff: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, __jsx(NewMobileDoughnutChart, {\n      name: 'Tank 1',\n      currentValue: 9.6,\n      totalValue: 16,\n      unitOfMeasure: 'ft',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return __jsx(NewLayout, {\n    company: \"jct\" // sites={\n    //   data.map((site, i) => (\n    //     <li key={i}>\n    //       <Link href={`jct/${site.BATTERY.toLowerCase()}`}><a>{site.BATTERY}</a></Link>\n    //     </li>\n    //   ))\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  });\n};\n\nexport async function getServerSideProps(ctx) {\n  const res = await fetch('http://localhost:3001/api/jct');\n  const data = await res.json();\n  let isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i);\n\n  if (isMobileView < 0) {\n    return {\n      props: {\n        isMobileView: false,\n        data\n      }\n    };\n  } else {\n    return {\n      props: {\n        isMobileView: true,\n        data\n      }\n    };\n  }\n}\nHome = withOrientationChange(Home);\nexport default Home;","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/pages/jct/index.js"],"names":["styled","fetch","Link","withOrientationChange","NewLayout","NewMobileLayout","NewDetails","NewMobileDetails","NewMobileDoughnutChart","DoughnutChart","NewMobileCarousel","Home","props","data","isMobileView","isLandscape","isPortrait","getServerSideProps","ctx","res","json","req","headers","search"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport fetch from 'isomorphic-unfetch'\nimport Link from 'next/link'\nimport { withOrientationChange } from 'react-device-detect'\n\nimport NewLayout from '../../components/NewLayout'\nimport NewMobileLayout from '../../components/NewMobileLayout'\nimport NewDetails from '../../components/NewDetails'\nimport NewMobileDetails from '../../components/NewMobileDetails'\nimport NewMobileDoughnutChart from '../../components/NewMobileDoughnutChart'\nimport DoughnutChart from '../../components/DoughnutChart'\nimport NewMobileCarousel from '../../components/NewMobileCarousel'\n// import Layout from '../../../components/Layout'\n// import MobileLayout from '../../../components/MobileLayout'\n// import MobileCarousel from '../../../components/MobileCarousel'\n// import FullDetails from '../../../components/FullDetails'\n// import Details from '../../../components/Details'\n\n\nlet Home = (props, { data, isMobileView }) => {\n  const { isLandscape, isPortrait } = props\n\n  if(isLandscape){\n    return(\n      <NewMobileLayout site_name='University' date='01/01/2020' time='5:20 PM'>\n        <NewMobileDetails resourceType='Water' alarmOn={12} alarmOff={10}>\n            <NewMobileDoughnutChart name={'Tank 1'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 2'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 3'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 4'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 1'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 2'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 3'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 4'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n        </NewMobileDetails>\n        <NewMobileDetails resourceType='Oil' alarmOn={12} alarmOff={10}>\n          <NewMobileDoughnutChart name={'Tank 1'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n        </NewMobileDetails>\n      </NewMobileLayout>\n    )\n  }\n\n  if(isPortrait){\n    return(\n      <NewMobileLayout site_name='University' date='01/01/2020' time='5:20 PM'>\n        <NewMobileDetails resourceType='Water' alarmOn={12} alarmOff={10}>\n          <NewMobileCarousel slideNum={4}>\n            <NewMobileDoughnutChart name={'Tank 1'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 2'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 3'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 4'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 5'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 6'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 7'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n            <NewMobileDoughnutChart name={'Tank 8'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n          </NewMobileCarousel>\n        </NewMobileDetails>\n        <NewMobileDetails resourceType='Oil' alarmOn={12} alarmOff={10}>\n          <NewMobileDoughnutChart name={'Tank 1'} currentValue={9.6} totalValue={16} unitOfMeasure={'ft'} />\n        </NewMobileDetails>\n      </NewMobileLayout>\n    )\n  }\n\n  return(\n  <NewLayout\n    company=\"jct\" \n    // sites={\n    //   data.map((site, i) => (\n    //     <li key={i}>\n    //       <Link href={`jct/${site.BATTERY.toLowerCase()}`}><a>{site.BATTERY}</a></Link>\n    //     </li>\n    //   ))\n    // }\n  />\n  )\n}\n\nexport async function getServerSideProps(ctx){\n  const res = await fetch('http://localhost:3001/api/jct')\n  const data = await res.json();\n\n  let isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i)\n    \n    if(isMobileView < 0){\n      return {\n        props: {\n          isMobileView: false,\n          data\n        }\n      }\n    } else {\n      return {\n        props: {\n          isMobileView: true,\n          data\n        }\n      }\n    }\n} \n\nHome = withOrientationChange(Home)\n\n\nexport default Home"]},"metadata":{},"sourceType":"module"}