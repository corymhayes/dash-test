{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cor-eee/Projects/jct-next/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\n  /*  USE FOR DEVELOPMENT */\\n  @font-face{\\n    font-family: 'Industry';\\n    src: url('/static/fonts/Industry-Bold.woff2') format('woff2'),\\n         url('/static/fonts/Industry-Bold.woff') format('woff'),\\n         url('/static/fonts/Industry-Bold.ttf') format('truetype');\\n    font-weight: bold;\\n    font-style: normal;\\n  }\\n\\n  @font-face{\\n    font-family: 'Industry';\\n    src: url('/static/fonts/Industry-Medium.woff2') format('woff2'),\\n         url('/static/fonts/Industry-Medium.woff') format('woff'),\\n         url('/static/fonts/Industry-Medium.ttf') format('truetype'),\\n         url('/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\\n    font-weight: 500;\\n    font-style: normal;\\n  }\\n\\n  /*  USE FOR PRODUCTION */\\n  \\n  /* @font-face{\\n    font-family: 'Industry';\\n    src: url('/portal/jct-frontend/static/fonts/Industry-Bold.woff2') format('woff2'),\\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.woff') format('woff'),\\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.ttf') format('truetype');\\n    font-weight: bold;\\n    font-style: normal;\\n  }\\n\\n  @font-face{\\n    font-family: 'Industry';\\n    src: url('/portal/jct-frontend/static/fonts/Industry-Medium.woff2') format('woff2'),\\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.woff') format('woff'),\\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.ttf') format('truetype'),\\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\\n    font-weight: 500;\\n    font-style: normal;\\n  } */\\n\\n  *{\\n    margin: 0;\\n    padding: 0;\\n    box-sizing: border-box;\\n    font-size: 10px;\\n  }\\n  \\n  body{\\n    font-family: 'Industry', sans-serif;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { CompanyProvider } from '../components/CompanyProvider';\nvar GlobalStyle = createGlobalStyle(_templateObject());\n_c = GlobalStyle;\nexport default function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(React.Fragment, null, __jsx(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), __jsx(CompanyProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }))));\n}\n_c2 = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"http://localhost:3001/api/\".concat(name));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            console.log(data);\n            return _context.abrupt(\"return\", {\n              props: {\n                siteList: data,\n                companyName: name\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"MyApp\");","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/pages/_app.js"],"names":["React","useState","createGlobalStyle","CompanyProvider","GlobalStyle","MyApp","Component","pageProps","getInitialProps","ctx","fetch","name","res","json","data","console","log","props","siteList","companyName"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AAEA,IAAMC,WAAW,GAAGF,iBAAH,mBAAjB;KAAME,W;AAuDN,eAAe,SAASC,KAAT,OAAwC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,SAAY,QAAZA,SAAY;AACrD,SACE,4BACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF;AAQD;MATuBF,K;;AAWxBA,KAAK,CAACG,eAAN;AAAA,uEAAwB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEJC,KAAK,qCAA8BC,IAA9B,EAFD;;AAAA;AAEhBC,YAAAA,GAFgB;AAAA;AAAA,mBAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBC,YAAAA,IAHgB;AAKtBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AALsB,6CAOf;AACLG,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,QAAQ,EAAEJ,IAAZ;AAAkBK,gBAAAA,WAAW,EAAER;AAA/B;AADF,aAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React, { useState } from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport { CompanyProvider } from '../components/CompanyProvider'\n\nconst GlobalStyle = createGlobalStyle`\n\n  /*  USE FOR DEVELOPMENT */\n  @font-face{\n    font-family: 'Industry';\n    src: url('/static/fonts/Industry-Bold.woff2') format('woff2'),\n         url('/static/fonts/Industry-Bold.woff') format('woff'),\n         url('/static/fonts/Industry-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n  }\n\n  @font-face{\n    font-family: 'Industry';\n    src: url('/static/fonts/Industry-Medium.woff2') format('woff2'),\n         url('/static/fonts/Industry-Medium.woff') format('woff'),\n         url('/static/fonts/Industry-Medium.ttf') format('truetype'),\n         url('/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\n    font-weight: 500;\n    font-style: normal;\n  }\n\n  /*  USE FOR PRODUCTION */\n  \n  /* @font-face{\n    font-family: 'Industry';\n    src: url('/portal/jct-frontend/static/fonts/Industry-Bold.woff2') format('woff2'),\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.woff') format('woff'),\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n  }\n\n  @font-face{\n    font-family: 'Industry';\n    src: url('/portal/jct-frontend/static/fonts/Industry-Medium.woff2') format('woff2'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.woff') format('woff'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.ttf') format('truetype'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\n    font-weight: 500;\n    font-style: normal;\n  } */\n\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n  \n  body{\n    font-family: 'Industry', sans-serif;\n  }\n`\n\nexport default function MyApp({ Component, pageProps }){\n  return(\n    <>\n      <GlobalStyle />\n      <CompanyProvider>\n        <Component {...pageProps} />\n      </CompanyProvider>\n    </>\n  )\n}\n\nMyApp.getInitialProps = async ctx => {\n  // const { name } = ctx.query\n  const res = await fetch(`http://localhost:3001/api/${name}`)\n  const data = await res.json();\n\n  console.log(data);\n  \n  return {\n    props: { siteList: data, companyName: name}\n  }\n} \n"]},"metadata":{},"sourceType":"module"}