{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/cor-eee/Projects/jct-next/pages/_app.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\n  /*  USE FOR DEVELOPMENT */\\n  @font-face{\\n    font-family: 'Industry';\\n    src: url('/static/fonts/Industry-Bold.woff2') format('woff2'),\\n         url('/static/fonts/Industry-Bold.woff') format('woff'),\\n         url('/static/fonts/Industry-Bold.ttf') format('truetype');\\n    font-weight: bold;\\n    font-style: normal;\\n  }\\n\\n  @font-face{\\n    font-family: 'Industry';\\n    src: url('/static/fonts/Industry-Medium.woff2') format('woff2'),\\n         url('/static/fonts/Industry-Medium.woff') format('woff'),\\n         url('/static/fonts/Industry-Medium.ttf') format('truetype'),\\n         url('/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\\n    font-weight: 500;\\n    font-style: normal;\\n  }\\n\\n  /*  USE FOR PRODUCTION */\\n  \\n  /* @font-face{\\n    font-family: 'Industry';\\n    src: url('/portal/jct-frontend/static/fonts/Industry-Bold.woff2') format('woff2'),\\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.woff') format('woff'),\\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.ttf') format('truetype');\\n    font-weight: bold;\\n    font-style: normal;\\n  }\\n\\n  @font-face{\\n    font-family: 'Industry';\\n    src: url('/portal/jct-frontend/static/fonts/Industry-Medium.woff2') format('woff2'),\\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.woff') format('woff'),\\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.ttf') format('truetype'),\\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\\n    font-weight: 500;\\n    font-style: normal;\\n  } */\\n\\n  *{\\n    margin: 0;\\n    padding: 0;\\n    box-sizing: border-box;\\n    font-size: 10px;\\n  }\\n  \\n  body{\\n    font-family: 'Industry', sans-serif;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { CompanyProvider } from '../components/CompanyProvider';\nimport { useRouter } from 'next/router';\nimport NewLayout from '../components/NewLayout';\nvar GlobalStyle = createGlobalStyle(_templateObject());\n_c = GlobalStyle;\nexport default function MyApp(_ref) {\n  _s();\n\n  var _this = this;\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState([]),\n      compList = _useState[0],\n      setCompList = _useState[1];\n\n  var router = useRouter();\n  var comp = router.query.comp;\n  useEffect(function () {\n    var getData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!comp) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"http://localhost:3001/api/\".concat(comp));\n\n              case 3:\n                res = _context.sent;\n                _context.next = 7;\n                break;\n\n              case 6:\n                __jsx(\"h1\", {\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 9\n                  }\n                });\n\n              case 7:\n                _context.next = 9;\n                return res.json();\n\n              case 9:\n                json = _context.sent;\n                console.log(json);\n                return _context.abrupt(\"return\", json);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (!getData()) {\n      __jsx(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, \"Loading...\");\n    } else {\n      setCompList(getData());\n    }\n  }, []);\n  console.log(compList);\n  return __jsx(React.Fragment, null, __jsx(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), __jsx(NewLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }))));\n}\n\n_s(MyApp, \"2hayWJWbgg5F65OZbcqK1vZ+LPo=\", false, function () {\n  return [useRouter];\n});\n\n_c2 = MyApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"MyApp\");","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/pages/_app.js"],"names":["React","useState","useEffect","createGlobalStyle","CompanyProvider","useRouter","NewLayout","GlobalStyle","MyApp","Component","pageProps","compList","setCompList","router","comp","query","getData","fetch","res","json","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,IAAMC,WAAW,GAAGJ,iBAAH,mBAAjB;KAAMI,W;AAuDN,eAAe,SAASC,KAAT,OAAwC;AAAA;;AAAA;;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,SAAY,QAAZA,SAAY;;AAAA,kBACrBT,QAAQ,CAAC,EAAD,CADa;AAAA,MAC9CU,QAD8C;AAAA,MACpCC,WADoC;;AAErD,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AAFqD,MAG7CS,IAH6C,GAGpCD,MAAM,CAACE,KAH6B,CAG7CD,IAH6C;AAKrDZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,OAAO;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGXF,IAHW;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIAG,KAAK,qCAA8BH,IAA9B,EAJL;;AAAA;AAIZI,gBAAAA,GAJY;AAAA;AAAA;;AAAA;AAMZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AANY;AAAA;AAAA,uBASKA,GAAG,CAACC,IAAJ,EATL;;AAAA;AASRA,gBAAAA,IATQ;AAUdC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAVc,iDAWPA,IAXO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAPH,OAAO;AAAA;AAAA;AAAA,OAAb;;AAcA,QAAG,CAACA,OAAO,EAAX,EAAc;AACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW,CAACI,OAAO,EAAR,CAAX;AACD;AACF,GApBQ,EAoBN,EApBM,CAAT;AAsBAI,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AAEA,SACE,4BACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF;AAQD;;GArCuBF,K;UAEPH,S;;;MAFOG,K","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport { CompanyProvider } from '../components/CompanyProvider'\nimport { useRouter } from 'next/router'\nimport NewLayout from '../components/NewLayout'\n\nconst GlobalStyle = createGlobalStyle`\n\n  /*  USE FOR DEVELOPMENT */\n  @font-face{\n    font-family: 'Industry';\n    src: url('/static/fonts/Industry-Bold.woff2') format('woff2'),\n         url('/static/fonts/Industry-Bold.woff') format('woff'),\n         url('/static/fonts/Industry-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n  }\n\n  @font-face{\n    font-family: 'Industry';\n    src: url('/static/fonts/Industry-Medium.woff2') format('woff2'),\n         url('/static/fonts/Industry-Medium.woff') format('woff'),\n         url('/static/fonts/Industry-Medium.ttf') format('truetype'),\n         url('/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\n    font-weight: 500;\n    font-style: normal;\n  }\n\n  /*  USE FOR PRODUCTION */\n  \n  /* @font-face{\n    font-family: 'Industry';\n    src: url('/portal/jct-frontend/static/fonts/Industry-Bold.woff2') format('woff2'),\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.woff') format('woff'),\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n  }\n\n  @font-face{\n    font-family: 'Industry';\n    src: url('/portal/jct-frontend/static/fonts/Industry-Medium.woff2') format('woff2'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.woff') format('woff'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.ttf') format('truetype'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\n    font-weight: 500;\n    font-style: normal;\n  } */\n\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n  \n  body{\n    font-family: 'Industry', sans-serif;\n  }\n`\n\nexport default function MyApp({ Component, pageProps }){\n  const [compList, setCompList] = useState([])\n  const router = useRouter()\n  const { comp } = router.query\n\n  useEffect(() => {\n    const getData = async () => {\n      let res\n\n      if(comp){\n        res = await fetch(`http://localhost:3001/api/${comp}`)\n      } else {\n        <h1></h1>\n      }\n\n      const json = await res.json()\n      console.log(json);\n      return json\n    }\n    \n    if(!getData()){\n      <h1>Loading...</h1>\n    } else {\n      setCompList(getData())\n    }\n  }, [])\n\n  console.log(compList);\n\n  return(\n    <>\n      <GlobalStyle />\n      <NewLayout>\n        <Component {...pageProps} />\n      </NewLayout>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}