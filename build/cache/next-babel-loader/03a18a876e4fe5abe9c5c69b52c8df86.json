{"ast":null,"code":"var _jsxFileName = \"/Users/cor-eee/Projects/jct-next/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { CompanyProvider } from '../components/CompanyProvider';\nimport { useRouter } from 'next/router';\nimport NewLayout from '../components/NewLayout';\nconst GlobalStyle = createGlobalStyle`\n\n  /*  USE FOR DEVELOPMENT */\n  @font-face{\n    font-family: 'Industry';\n    src: url('/static/fonts/Industry-Bold.woff2') format('woff2'),\n         url('/static/fonts/Industry-Bold.woff') format('woff'),\n         url('/static/fonts/Industry-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n  }\n\n  @font-face{\n    font-family: 'Industry';\n    src: url('/static/fonts/Industry-Medium.woff2') format('woff2'),\n         url('/static/fonts/Industry-Medium.woff') format('woff'),\n         url('/static/fonts/Industry-Medium.ttf') format('truetype'),\n         url('/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\n    font-weight: 500;\n    font-style: normal;\n  }\n\n  /*  USE FOR PRODUCTION */\n  \n  /* @font-face{\n    font-family: 'Industry';\n    src: url('/portal/jct-frontend/static/fonts/Industry-Bold.woff2') format('woff2'),\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.woff') format('woff'),\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n  }\n\n  @font-face{\n    font-family: 'Industry';\n    src: url('/portal/jct-frontend/static/fonts/Industry-Medium.woff2') format('woff2'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.woff') format('woff'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.ttf') format('truetype'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\n    font-weight: 500;\n    font-style: normal;\n  } */\n\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n  \n  body{\n    font-family: 'Industry', sans-serif;\n  }\n`;\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: compList,\n    1: setCompList\n  } = useState([]);\n  const router = useRouter();\n  const {\n    comp\n  } = router.query;\n  useEffect(() => {\n    const getData = async () => {\n      let res = {};\n\n      if (comp) {\n        res = await fetch(`http://localhost:3001/api/${comp}`);\n      } else {\n        __jsx(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        }, \"Loading...\");\n      }\n\n      const json = await res.json();\n      console.log(json);\n      return json;\n    };\n\n    if (!getData()) {\n      __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, \"Loading...\");\n    } else {\n      setCompList(getData());\n    }\n  }, []);\n  console.log(compList);\n  return __jsx(React.Fragment, null, __jsx(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), __jsx(NewLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/pages/_app.js"],"names":["React","useState","useEffect","createGlobalStyle","CompanyProvider","useRouter","NewLayout","GlobalStyle","MyApp","Component","pageProps","compList","setCompList","router","comp","query","getData","res","fetch","json","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,MAAMC,WAAW,GAAGJ,iBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtC;AAuDA,eAAe,SAASK,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAwC;AACrD,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMY,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,OAAO,GAAG,YAAY;AAC1B,UAAIC,GAAG,GAAG,EAAV;;AAEA,UAAGH,IAAH,EAAQ;AACNG,QAAAA,GAAG,GAAG,MAAMC,KAAK,CAAE,6BAA4BJ,IAAK,EAAnC,CAAjB;AACD,OAFD,MAEO;AACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AAED,YAAMK,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAOA,IAAP;AACD,KAZD;;AAcA,QAAG,CAACH,OAAO,EAAX,EAAc;AACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW,CAACI,OAAO,EAAR,CAAX;AACD;AACF,GApBQ,EAoBN,EApBM,CAAT;AAsBAI,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AAEA,SACE,4BACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF;AAQD","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport { CompanyProvider } from '../components/CompanyProvider'\nimport { useRouter } from 'next/router'\nimport NewLayout from '../components/NewLayout'\n\nconst GlobalStyle = createGlobalStyle`\n\n  /*  USE FOR DEVELOPMENT */\n  @font-face{\n    font-family: 'Industry';\n    src: url('/static/fonts/Industry-Bold.woff2') format('woff2'),\n         url('/static/fonts/Industry-Bold.woff') format('woff'),\n         url('/static/fonts/Industry-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n  }\n\n  @font-face{\n    font-family: 'Industry';\n    src: url('/static/fonts/Industry-Medium.woff2') format('woff2'),\n         url('/static/fonts/Industry-Medium.woff') format('woff'),\n         url('/static/fonts/Industry-Medium.ttf') format('truetype'),\n         url('/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\n    font-weight: 500;\n    font-style: normal;\n  }\n\n  /*  USE FOR PRODUCTION */\n  \n  /* @font-face{\n    font-family: 'Industry';\n    src: url('/portal/jct-frontend/static/fonts/Industry-Bold.woff2') format('woff2'),\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.woff') format('woff'),\n         url('/portal/jct-frontend/static/fonts/Industry-Bold.ttf') format('truetype');\n    font-weight: bold;\n    font-style: normal;\n  }\n\n  @font-face{\n    font-family: 'Industry';\n    src: url('/portal/jct-frontend/static/fonts/Industry-Medium.woff2') format('woff2'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.woff') format('woff'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.ttf') format('truetype'),\n         url('/portal/jct-frontend/static/fonts/Industry-Medium.svg#Industry-Medium') format('svg');\n    font-weight: 500;\n    font-style: normal;\n  } */\n\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n  \n  body{\n    font-family: 'Industry', sans-serif;\n  }\n`\n\nexport default function MyApp({ Component, pageProps }){\n  const [compList, setCompList] = useState([])\n  const router = useRouter()\n  const { comp } = router.query\n\n  useEffect(() => {\n    const getData = async () => {\n      let res = {}\n\n      if(comp){\n        res = await fetch(`http://localhost:3001/api/${comp}`)\n      } else {\n        <h1>Loading...</h1>\n      }\n\n      const json = await res.json()\n      console.log(json);\n      return json\n    }\n    \n    if(!getData()){\n      <h1>Loading...</h1>\n    } else {\n      setCompList(getData())\n    }\n  }, [])\n\n  console.log(compList);\n\n  return(\n    <>\n      <GlobalStyle />\n      <NewLayout>\n        <Component {...pageProps} />\n      </NewLayout>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}