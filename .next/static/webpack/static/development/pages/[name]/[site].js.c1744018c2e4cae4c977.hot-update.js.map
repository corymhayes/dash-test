{"version":3,"file":"static/webpack/static/development/pages/[name]/[site].js.c1744018c2e4cae4c977.hot-update.js","sources":["webpack:///./components/DoughnutChart.js"],"sourcesContent":["import { Doughnut } from 'react-chartjs-2'\n\nimport styled from 'styled-components'\nimport { color } from '../public/screensizes'\n\n\nconst DoughnutChart = props => {\n  \n  const data = {\n    datasets: [{\n      data: [props.currentValue, (props.totalValue - props.currentValue)],\n      backgroundColor: [ color.jctOrange, 'rgba(0,0,0, .05)' ],\n      borderWidth: 0\n    }]\n  }\n\n  return (\n    <GraphContainer>\n      <Graph>\n        <Doughnut \n          data={ data }\n          width={ 150 }\n          height={ 150 }\n          options={{ \n            cutoutPercentage: 80, \n            rotation: (-1.25 * Math.PI),\n            circumference: (1.5 * Math.PI),\n            tooltips: false,\n            hover: false\n          }}\n        />\n      </Graph>\n      <Volume>\n        <CurrentVolume>{ props.currentValue != 0 ? props.currentValue.toFixed(2) : props.currentValue }</CurrentVolume>\n        <CurrentVolumeLabel>Volume</CurrentVolumeLabel>\n      </Volume>\n    </GraphContainer>\n  )\n}\n\nexport default DoughnutChart    \n\n\nconst GraphContainer = styled.div`\n  display: grid;\n  grid: 1fr / 1fr;\n  place-items: center;\n`\n\nconst Graph = styled.div`\n  grid-row: 1;\n  grid-column: 1;\n`\n\nconst Volume = styled.div`\n  grid-row: 1;\n  grid-column: 1;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  margin-top: 1.5rem;\n`\n\nconst CurrentVolume = styled.div`\n  font-size: 2.5rem;\n  color: ${color.jctDarkGray};\n  font-weight: bold;\n`\n\nconst CurrentVolumeLabel = styled.div`\n  font-size: 1.5rem;\n  color: ${color.jctLightGray};\n`"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}