{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/cor-eee/Projects/jct-next/pages/test/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport io from 'socket.io-client';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/Layout';\nimport MobileLayout from '../../components/MobileLayout';\nimport Details from '../../components/Details';\n\nvar Site = /*#__PURE__*/function (_Component) {\n  _inherits(Site, _Component);\n\n  var _super = _createSuper(Site);\n\n  function Site() {\n    var _this;\n\n    _classCallCheck(this, Site);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      companies: []\n    });\n\n    return _this;\n  }\n\n  _createClass(Site, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.props.isMobileView ? __jsx(MobileLayout, {\n        company_name: \"Doghouse Oil & Gas\",\n        site_name: \"Anchor Battery\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, this.props.equipment.map(function (equip) {\n        return __jsx(Details, {\n          key: equip.id,\n          name: equip.name,\n          currentValue: equip.currentLevel,\n          totalValue: equip.totalLevel,\n          alarmOn: equip.on_level,\n          alarmOff: equip.off_level,\n          mon: equip.monValue,\n          tue: equip.tueValue,\n          wed: equip.wedValue,\n          thu: equip.thuValue,\n          fri: equip.friValue,\n          sat: equip.satValue,\n          sun: equip.sunValue,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        });\n      })) : __jsx(Layout, {\n        company_name: \"Doghouse Oil & Gas\",\n        site_name: \"Anchor Battery\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, this.props.equipment.map(function (equip) {\n        return __jsx(Details, {\n          key: equip.id,\n          name: equip.name,\n          currentValue: equip.currentLevel,\n          totalValue: equip.totalLevel,\n          alarmOn: equip.on_level,\n          alarmOff: equip.off_level,\n          mon: equip.monValue,\n          tue: equip.tueValue,\n          wed: equip.wedValue,\n          thu: equip.thuValue,\n          fri: equip.friValue,\n          sat: equip.satValue,\n          sun: equip.sunValue,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }\n        });\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(ctx) {\n      var _ctx$query, name, site, res;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ctx$query = ctx.query, name = _ctx$query.name, site = _ctx$query.site;\n              console.log(name, site);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"http://jctsystems.com/portal/test.asp\"));\n\n            case 4:\n              res = _context.sent;\n              // const json = await res.json();\n              console.log(res[4]); // let isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i)\n              // if(isMobileView < 0){\n              //   return {\n              //     isMobileView: false,\n              //     equipment: json[1]\n              //   }\n              // } else {\n              //   return {\n              //     isMobileView: true,\n              //     equipment: json[1]\n              //   }\n              // }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Site;\n}(Component);\n\n_defineProperty(Site, \"defaultProps\", {\n  company: []\n});\n\nexport { Site as default };","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/pages/test/index.js"],"names":["Component","io","fetch","Layout","MobileLayout","Details","Site","companies","props","isMobileView","equipment","map","equip","id","name","currentLevel","totalLevel","on_level","off_level","monValue","tueValue","wedValue","thuValue","friValue","satValue","sunValue","ctx","query","site","console","log","res","company"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport io from 'socket.io-client'\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../components/Layout'\nimport MobileLayout from '../../components/MobileLayout' \nimport Details from '../../components/Details'\n\n\nexport default class Site extends Component {\n\n  static defaultProps = {\n    company: []\n  }\n\n  state = {\n    companies: []\n  }\n  \n  static async getInitialProps(ctx){\n    const { name, site } = ctx.query\n    console.log(name, site);\n    const res = await fetch(`http://jctsystems.com/portal/test.asp`)\n    // const json = await res.json();\n    console.log(res[4]);\n    \n    // let isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i)\n    \n    // if(isMobileView < 0){\n    //   return {\n    //     isMobileView: false,\n    //     equipment: json[1]\n    //   }\n    // } else {\n    //   return {\n    //     isMobileView: true,\n    //     equipment: json[1]\n    //   }\n    // }\n  }\n\n  render(){\n    return(\n        this.props.isMobileView ?\n        <MobileLayout company_name=\"Doghouse Oil & Gas\" site_name=\"Anchor Battery\">\n            {\n              this.props.equipment.map(equip => (\n                <Details \n                  key={equip.id} \n                  name={equip.name}\n                  currentValue={equip.currentLevel}\n                  totalValue={equip.totalLevel}\n                  alarmOn={equip.on_level}\n                  alarmOff={equip.off_level}\n                  mon={equip.monValue}\n                  tue={equip.tueValue}\n                  wed={equip.wedValue}\n                  thu={equip.thuValue}\n                  fri={equip.friValue}\n                  sat={equip.satValue}\n                  sun={equip.sunValue}\n                />\n              ))\n            }\n          </MobileLayout>\n        :       \n          <Layout company_name=\"Doghouse Oil & Gas\" site_name=\"Anchor Battery\">\n            {\n              this.props.equipment.map(equip => (\n                <Details \n                  key={equip.id} \n                  name={equip.name}\n                  currentValue={equip.currentLevel}\n                  totalValue={equip.totalLevel}\n                  alarmOn={equip.on_level}\n                  alarmOff={equip.off_level}\n                  mon={equip.monValue}\n                  tue={equip.tueValue}\n                  wed={equip.wedValue}\n                  thu={equip.thuValue}\n                  fri={equip.friValue}\n                  sat={equip.satValue}\n                  sun={equip.sunValue}\n                />\n              ))\n            }\n          </Layout>          \n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}