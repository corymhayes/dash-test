{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/cor-eee/Projects/jct-next/components/DoughnutChart.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Doughnut } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { color } from '../public/screensizes';\n\nvar DoughnutChart = function DoughnutChart(props) {\n  var data = {\n    datasets: [{\n      data: [props.currentValue, props.totalValue - props.currentValue],\n      backgroundColor: [color.jctOrange, 'rgba(0,0,0, .05)'],\n      borderWidth: 0\n    }]\n  };\n  return __jsx(GraphContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Graph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Doughnut, {\n    data: data,\n    width: 150,\n    height: 150,\n    options: {\n      cutoutPercentage: 80,\n      rotation: -1.25 * Math.PI,\n      circumference: 1.5 * Math.PI,\n      tooltips: false,\n      hover: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), __jsx(Volume, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(CurrentVolume, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, props.currentValue < 10), __jsx(CurrentVolumeLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Volume\")));\n};\n\nexport default DoughnutChart;\nvar GraphContainer = styled.div.withConfig({\n  displayName: \"DoughnutChart__GraphContainer\",\n  componentId: \"sc-557kc3-0\"\n})([\"display:grid;grid:1fr / 1fr;place-items:center;\"]);\nvar Graph = styled.div.withConfig({\n  displayName: \"DoughnutChart__Graph\",\n  componentId: \"sc-557kc3-1\"\n})([\"grid-row:1;grid-column:1;\"]);\nvar Volume = styled.div.withConfig({\n  displayName: \"DoughnutChart__Volume\",\n  componentId: \"sc-557kc3-2\"\n})([\"grid-row:1;grid-column:1;display:flex;flex-flow:column;align-items:center;margin-top:1.5rem;\"]);\nvar CurrentVolume = styled.div.withConfig({\n  displayName: \"DoughnutChart__CurrentVolume\",\n  componentId: \"sc-557kc3-3\"\n})([\"font-size:2.5rem;color:\", \";font-weight:bold;\"], color.jctDarkGray);\nvar CurrentVolumeLabel = styled.div.withConfig({\n  displayName: \"DoughnutChart__CurrentVolumeLabel\",\n  componentId: \"sc-557kc3-4\"\n})([\"font-size:1.5rem;color:\", \";\"], color.jctLightGray);","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/components/DoughnutChart.js"],"names":["Doughnut","styled","color","DoughnutChart","props","data","datasets","currentValue","totalValue","backgroundColor","jctOrange","borderWidth","cutoutPercentage","rotation","Math","PI","circumference","tooltips","hover","GraphContainer","div","Graph","Volume","CurrentVolume","jctDarkGray","CurrentVolumeLabel","jctLightGray"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,uBAAtB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAE7B,MAAMC,IAAI,GAAG;AACXC,IAAAA,QAAQ,EAAE,CAAC;AACTD,MAAAA,IAAI,EAAE,CAACD,KAAK,CAACG,YAAP,EAAsBH,KAAK,CAACI,UAAN,GAAmBJ,KAAK,CAACG,YAA/C,CADG;AAETE,MAAAA,eAAe,EAAE,CAAEP,KAAK,CAACQ,SAAR,EAAmB,kBAAnB,CAFR;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAD;AADC,GAAb;AAQA,SACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,IAAI,EAAGN,IADT;AAEE,IAAA,KAAK,EAAG,GAFV;AAGE,IAAA,MAAM,EAAG,GAHX;AAIE,IAAA,OAAO,EAAE;AACPO,MAAAA,gBAAgB,EAAE,EADX;AAEPC,MAAAA,QAAQ,EAAG,CAAC,IAAD,GAAQC,IAAI,CAACC,EAFjB;AAGPC,MAAAA,aAAa,EAAG,MAAMF,IAAI,CAACC,EAHpB;AAIPE,MAAAA,QAAQ,EAAE,KAJH;AAKPC,MAAAA,KAAK,EAAE;AALA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAeE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEId,KAAK,CAACG,YAAN,GAAqB,EAFzB,CADF,EAME,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CAfF,CADF;AA0BD,CApCD;;AAsCA,eAAeJ,aAAf;AAGA,IAAMgB,cAAc,GAAGlB,MAAM,CAACmB,GAAV;AAAA;AAAA;AAAA,uDAApB;AAMA,IAAMC,KAAK,GAAGpB,MAAM,CAACmB,GAAV;AAAA;AAAA;AAAA,iCAAX;AAKA,IAAME,MAAM,GAAGrB,MAAM,CAACmB,GAAV;AAAA;AAAA;AAAA,oGAAZ;AASA,IAAMG,aAAa,GAAGtB,MAAM,CAACmB,GAAV;AAAA;AAAA;AAAA,sDAERlB,KAAK,CAACsB,WAFE,CAAnB;AAMA,IAAMC,kBAAkB,GAAGxB,MAAM,CAACmB,GAAV;AAAA;AAAA;AAAA,qCAEblB,KAAK,CAACwB,YAFO,CAAxB","sourcesContent":["import { Doughnut } from 'react-chartjs-2'\n\nimport styled from 'styled-components'\nimport { color } from '../public/screensizes'\n\n\nconst DoughnutChart = props => {\n  \n  const data = {\n    datasets: [{\n      data: [props.currentValue, (props.totalValue - props.currentValue)],\n      backgroundColor: [ color.jctOrange, 'rgba(0,0,0, .05)' ],\n      borderWidth: 0\n    }]\n  }\n\n  return (\n    <GraphContainer>\n      <Graph>\n        <Doughnut \n          data={ data }\n          width={ 150 }\n          height={ 150 }\n          options={{ \n            cutoutPercentage: 80, \n            rotation: (-1.25 * Math.PI),\n            circumference: (1.5 * Math.PI),\n            tooltips: false,\n            hover: false\n          }}\n        />\n      </Graph>\n      <Volume>\n        <CurrentVolume>\n          {\n            props.currentValue < 10 \n          }\n          </CurrentVolume>\n        <CurrentVolumeLabel>Volume</CurrentVolumeLabel>\n      </Volume>\n    </GraphContainer>\n  )\n}\n\nexport default DoughnutChart    \n\n\nconst GraphContainer = styled.div`\n  display: grid;\n  grid: 1fr / 1fr;\n  place-items: center;\n`\n\nconst Graph = styled.div`\n  grid-row: 1;\n  grid-column: 1;\n`\n\nconst Volume = styled.div`\n  grid-row: 1;\n  grid-column: 1;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  margin-top: 1.5rem;\n`\n\nconst CurrentVolume = styled.div`\n  font-size: 2.5rem;\n  color: ${color.jctDarkGray};\n  font-weight: bold;\n`\n\nconst CurrentVolumeLabel = styled.div`\n  font-size: 1.5rem;\n  color: ${color.jctLightGray};\n`"]},"metadata":{},"sourceType":"module"}