{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/cor-eee/Projects/jct-next/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport MobileLayout from '../components/MobileLayout';\nimport Details from '../components/Details';\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\nimport useMobileDetect from 'use-mobile-detect-hook';\nimport { color } from '../public/screensizes';\n\nvar Home = function Home(props) {\n  console.log(props.equipment);\n  return __jsx(React.Fragment, null, props.isMobileView ? __jsx(MobileLayout, {\n    company_name: \"Doghouse Oil & Gas\",\n    site_name: \"Anchor Battery\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, __jsx(Details, {\n    name: \"Oil Tank 1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), __jsx(Details, {\n    name: \"Oil Tank 2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), __jsx(Details, {\n    name: \"Oil Tank 3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), __jsx(Details, {\n    name: \"Water Tank 1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(Details, {\n    name: \"Water Tank 2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(Details, {\n    name: \"Water Tank 3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })) : __jsx(Layout, {\n    company_name: \"Doghouse Oil & Gas\",\n    site_name: \"Anchor Battery\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, props.equipment.map(equip)));\n};\n\nHome.getInitialProps = function _callee(ctx) {\n  var isMobileView;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i);\n\n          if (!(isMobileView < 0)) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            isMobileView: false\n          });\n\n        case 5:\n          return _context.abrupt(\"return\", {\n            isMobileView: true\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nHome.getInitialProps = function _callee2() {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3001/api/doghouse/anchor'));\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            equipment: json[1]\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/pages/index.js"],"names":["styled","fetch","Layout","MobileLayout","Details","BrowserView","MobileView","isBrowser","isMobile","useMobileDetect","color","Home","props","console","log","equipment","isMobileView","map","equip","getInitialProps","ctx","req","headers","search","res","json"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,qBAA7D;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AAEA,SAASC,KAAT,QAAsB,uBAAtB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB;AACA,SACE,4BAEIH,KAAK,CAACI,YAAN,GACE,MAAC,YAAD;AAAc,IAAA,YAAY,EAAC,oBAA3B;AAAgD,IAAA,SAAS,EAAC,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,GAUE,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAC,oBAArB;AAA0C,IAAA,SAAS,EAAC,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,KAAK,CAACG,SAAN,CAAgBE,GAAhB,CAAoBC,KAApB,CAFJ,CAZN,CADF;AAqBD,CAvBD;;AAyBAP,IAAI,CAACQ,eAAL,GAAwB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBJ,UAAAA,YADkB,GACHI,GAAG,CAACC,GAAJ,CAAQC,OAAR,CAAgB,YAAhB,EAA8BC,MAA9B,CAAqC,iBAArC,CADG;;AAAA,gBAGnBP,YAAY,GAAG,CAHI;AAAA;AAAA;AAAA;;AAAA,2CAIb;AAACA,YAAAA,YAAY,EAAE;AAAf,WAJa;;AAAA;AAAA,2CAMb;AAACA,YAAAA,YAAY,EAAE;AAAf,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWAL,IAAI,CAACQ,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHlB,KAAK,CAAC,2CAAD,CADF;;AAAA;AACfuB,UAAAA,GADe;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfA,UAAAA,IAFe;AAAA,4CAId;AACLV,YAAAA,SAAS,EAAEU,IAAI,CAAC,CAAD;AADV,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAed,IAAf","sourcesContent":["import styled from 'styled-components'\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../components/Layout'\nimport MobileLayout from '../components/MobileLayout' \nimport Details from '../components/Details'\n\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect'\nimport useMobileDetect from 'use-mobile-detect-hook'\n\nimport { color } from '../public/screensizes'\n\n\n\nconst Home = props => {\n  console.log(props.equipment)\n  return(\n    <>\n      {\n        props.isMobileView ?\n          <MobileLayout company_name=\"Doghouse Oil & Gas\" site_name=\"Anchor Battery\">\n            <Details name=\"Oil Tank 1\" />\n            <Details name=\"Oil Tank 2\" />\n            <Details name=\"Oil Tank 3\" />\n            <Details name=\"Water Tank 1\" />\n            <Details name=\"Water Tank 2\" />\n            <Details name=\"Water Tank 3\" />\n          </MobileLayout>\n        :\n          <Layout company_name=\"Doghouse Oil & Gas\" site_name=\"Anchor Battery\">\n            {\n              props.equipment.map(equip)\n            }\n          </Layout>\n      }\n    </>\n  )\n}\n\nHome.getInitialProps =  async ctx => {\n  let isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i)\n\n  if(isMobileView < 0){\n    return {isMobileView: false}\n  } else {\n    return {isMobileView: true}\n  }\n\n}\n\nHome.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3001/api/doghouse/anchor');\n  const json = await res.json();\n  \n  return {\n    equipment: json[1]\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}