{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/cor-eee/Projects/jct-next/components/DoughnutChart.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Doughnut } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { color } from '../public/screensizes';\n\nvar DoughnutChart = function DoughnutChart(props) {\n  var data = {\n    datasets: [{\n      data: [props.currentValue, props.totalValue - props.currentValue],\n      // backgroundColor: [ color.jctOrange, 'rgba(0,0,0, .05)' ],\n      backgroundColor: function backgroundColor(ctx) {\n        var i = ctx.dataIndex;\n        var v = ctx.dataset.data[i];\n        console.log(i, v);\n      },\n      borderWidth: 0\n    }]\n  };\n  return __jsx(GraphContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Graph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(Doughnut, {\n    data: data,\n    width: 150,\n    height: 150,\n    options: {\n      cutoutPercentage: 80,\n      rotation: -1.25 * Math.PI,\n      circumference: 1.5 * Math.PI,\n      tooltips: false,\n      hover: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })), __jsx(Volume, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(CurrentVolume, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, props.currentValue !== null ? props.currentValue.toFixed(2) : props.currentValue), __jsx(CurrentVolumeLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Volume\")));\n};\n\nexport default DoughnutChart;\nvar GraphContainer = styled.div.withConfig({\n  displayName: \"DoughnutChart__GraphContainer\",\n  componentId: \"sc-557kc3-0\"\n})([\"display:grid;grid:1fr / 1fr;place-items:center;\"]);\nvar Graph = styled.div.withConfig({\n  displayName: \"DoughnutChart__Graph\",\n  componentId: \"sc-557kc3-1\"\n})([\"grid-row:1;grid-column:1;\"]);\nvar Volume = styled.div.withConfig({\n  displayName: \"DoughnutChart__Volume\",\n  componentId: \"sc-557kc3-2\"\n})([\"grid-row:1;grid-column:1;display:flex;flex-flow:column;align-items:center;margin-top:1.5rem;\"]);\nvar CurrentVolume = styled.div.withConfig({\n  displayName: \"DoughnutChart__CurrentVolume\",\n  componentId: \"sc-557kc3-3\"\n})([\"font-size:2.5rem;color:\", \";font-weight:bold;\"], color.jctDarkGray);\nvar CurrentVolumeLabel = styled.div.withConfig({\n  displayName: \"DoughnutChart__CurrentVolumeLabel\",\n  componentId: \"sc-557kc3-4\"\n})([\"font-size:1.5rem;color:\", \";\"], color.jctLightGray);","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/components/DoughnutChart.js"],"names":["Doughnut","styled","color","DoughnutChart","props","data","datasets","currentValue","totalValue","backgroundColor","ctx","i","dataIndex","v","dataset","console","log","borderWidth","cutoutPercentage","rotation","Math","PI","circumference","tooltips","hover","toFixed","GraphContainer","div","Graph","Volume","CurrentVolume","jctDarkGray","CurrentVolumeLabel","jctLightGray"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,uBAAtB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAE7B,MAAMC,IAAI,GAAG;AACXC,IAAAA,QAAQ,EAAE,CAAC;AACTD,MAAAA,IAAI,EAAE,CAACD,KAAK,CAACG,YAAP,EAAsBH,KAAK,CAACI,UAAN,GAAmBJ,KAAK,CAACG,YAA/C,CADG;AAET;AACAE,MAAAA,eAAe,EAAE,yBAACC,GAAD,EAAS;AACxB,YAAMC,CAAC,GAAGD,GAAG,CAACE,SAAd;AACA,YAAMC,CAAC,GAAGH,GAAG,CAACI,OAAJ,CAAYT,IAAZ,CAAiBM,CAAjB,CAAV;AAGAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ,EAAeE,CAAf;AACD,OATQ;AAUTI,MAAAA,WAAW,EAAE;AAVJ,KAAD;AADC,GAAb;AAeA,SACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,IAAI,EAAGZ,IADT;AAEE,IAAA,KAAK,EAAG,GAFV;AAGE,IAAA,MAAM,EAAG,GAHX;AAIE,IAAA,OAAO,EAAE;AACPa,MAAAA,gBAAgB,EAAE,EADX;AAEPC,MAAAA,QAAQ,EAAG,CAAC,IAAD,GAAQC,IAAI,CAACC,EAFjB;AAGPC,MAAAA,aAAa,EAAG,MAAMF,IAAI,CAACC,EAHpB;AAIPE,MAAAA,QAAQ,EAAE,KAJH;AAKPC,MAAAA,KAAK,EAAE;AALA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAeE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBpB,KAAK,CAACG,YAAN,KAAuB,IAAvB,GAA8BH,KAAK,CAACG,YAAN,CAAmBkB,OAAnB,CAA2B,CAA3B,CAA9B,GAA8DrB,KAAK,CAACG,YAArF,CADF,EAEE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAfF,CADF;AAsBD,CAvCD;;AAyCA,eAAeJ,aAAf;AAGA,IAAMuB,cAAc,GAAGzB,MAAM,CAAC0B,GAAV;AAAA;AAAA;AAAA,uDAApB;AAMA,IAAMC,KAAK,GAAG3B,MAAM,CAAC0B,GAAV;AAAA;AAAA;AAAA,iCAAX;AAKA,IAAME,MAAM,GAAG5B,MAAM,CAAC0B,GAAV;AAAA;AAAA;AAAA,oGAAZ;AASA,IAAMG,aAAa,GAAG7B,MAAM,CAAC0B,GAAV;AAAA;AAAA;AAAA,sDAERzB,KAAK,CAAC6B,WAFE,CAAnB;AAMA,IAAMC,kBAAkB,GAAG/B,MAAM,CAAC0B,GAAV;AAAA;AAAA;AAAA,qCAEbzB,KAAK,CAAC+B,YAFO,CAAxB","sourcesContent":["import { Doughnut } from 'react-chartjs-2'\n\nimport styled from 'styled-components'\nimport { color } from '../public/screensizes'\n\n\nconst DoughnutChart = props => {\n  \n  const data = {\n    datasets: [{\n      data: [props.currentValue, (props.totalValue - props.currentValue)],\n      // backgroundColor: [ color.jctOrange, 'rgba(0,0,0, .05)' ],\n      backgroundColor: (ctx) => {\n        const i = ctx.dataIndex\n        const v = ctx.dataset.data[i]\n\n        \n        console.log(i, v);\n      },\n      borderWidth: 0\n    }]\n  }\n\n  return (\n    <GraphContainer>\n      <Graph>\n        <Doughnut \n          data={ data }\n          width={ 150 }\n          height={ 150 }\n          options={{ \n            cutoutPercentage: 80, \n            rotation: (-1.25 * Math.PI),\n            circumference: (1.5 * Math.PI),\n            tooltips: false,\n            hover: false\n          }}\n        />\n      </Graph>\n      <Volume>\n        <CurrentVolume>{ props.currentValue !== null ? props.currentValue.toFixed(2) : props.currentValue }</CurrentVolume>\n        <CurrentVolumeLabel>Volume</CurrentVolumeLabel>\n      </Volume>\n    </GraphContainer>\n  )\n}\n\nexport default DoughnutChart    \n\n\nconst GraphContainer = styled.div`\n  display: grid;\n  grid: 1fr / 1fr;\n  place-items: center;\n`\n\nconst Graph = styled.div`\n  grid-row: 1;\n  grid-column: 1;\n`\n\nconst Volume = styled.div`\n  grid-row: 1;\n  grid-column: 1;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  margin-top: 1.5rem;\n`\n\nconst CurrentVolume = styled.div`\n  font-size: 2.5rem;\n  color: ${color.jctDarkGray};\n  font-weight: bold;\n`\n\nconst CurrentVolumeLabel = styled.div`\n  font-size: 1.5rem;\n  color: ${color.jctLightGray};\n`"]},"metadata":{},"sourceType":"module"}