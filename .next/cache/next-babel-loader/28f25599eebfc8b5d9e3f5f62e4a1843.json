{"ast":null,"code":"var _jsxFileName = \"/Users/cor-eee/Projects/jct-next/pages/[name]/[site].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport io from 'socket.io-client';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/Layout';\nimport MobileLayout from '../../components/MobileLayout';\nimport Details from '../../components/Details';\nexport default class Site extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      messages: this.props.messages\n    });\n\n    _defineProperty(this, \"handleMessage\", message => {\n      this.setState(state => {\n        messages: state.messages;\n      });\n    });\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      name,\n      site\n    } = ctx.query;\n    const res = await fetch(`http://jct-systems.com/api/${name}/${site}`);\n    const json = await res.json();\n    let isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i);\n\n    if (isMobileView < 0) {\n      return {\n        isMobileView: false,\n        equipment: json[1]\n      };\n    } else {\n      return {\n        isMobileView: true,\n        equipment: json[1]\n      };\n    }\n  }\n\n  componentDidMount() {\n    this.socket = io('http://localhost:3001/'); // this.socket.on('company', this.handleMessage)\n\n    this.socket.on();\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n  }\n\n  render() {\n    return this.props.isMobileView ? __jsx(MobileLayout, {\n      company_name: \"Doghouse Oil & Gas\",\n      site_name: \"Anchor Battery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, this.props.equipment.map(equip => __jsx(Details, {\n      key: equip.id,\n      name: equip.name,\n      currentValue: equip.currentLevel,\n      totalValue: equip.totalLevel,\n      alarmOn: equip.on_level,\n      alarmOff: equip.off_level,\n      mon: equip.monValue,\n      tue: equip.tueValue,\n      wed: equip.wedValue,\n      thu: equip.thuValue,\n      fri: equip.friValue,\n      sat: equip.satValue,\n      sun: equip.sunValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }))) : __jsx(Layout, {\n      company_name: \"Doghouse Oil & Gas\",\n      site_name: \"Anchor Battery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, this.props.equipment.map(equip => __jsx(Details, {\n      key: equip.id,\n      name: equip.name,\n      currentValue: equip.currentLevel,\n      totalValue: equip.totalLevel,\n      alarmOn: equip.on_level,\n      alarmOff: equip.off_level,\n      mon: equip.monValue,\n      tue: equip.tueValue,\n      wed: equip.wedValue,\n      thu: equip.thuValue,\n      fri: equip.friValue,\n      sat: equip.satValue,\n      sun: equip.sunValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\n_defineProperty(Site, \"defaultProps\", {\n  messages: []\n});","map":{"version":3,"sources":["/Users/cor-eee/Projects/jct-next/pages/[name]/[site].js"],"names":["Component","io","fetch","Layout","MobileLayout","Details","Site","messages","props","message","setState","state","getInitialProps","ctx","name","site","query","res","json","isMobileView","req","headers","search","equipment","componentDidMount","socket","on","componentWillUnmount","close","render","map","equip","id","currentLevel","totalLevel","on_level","off_level","monValue","tueValue","wedValue","thuValue","friValue","satValue","sunValue"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport io from 'socket.io-client'\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../components/Layout'\nimport MobileLayout from '../../components/MobileLayout' \nimport Details from '../../components/Details'\n\n\nexport default class Site extends Component {\n\n  static defaultProps = {\n    messages: []\n  }\n\n  state = {\n    messages: this.props.messages\n  }\n  \n  static async getInitialProps(ctx){\n    const { name, site } = ctx.query\n    const res = await fetch(`http://jct-systems.com/api/${name}/${site}`);\n    const json = await res.json();\n    \n    let isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i)\n    \n    if(isMobileView < 0){\n      return {\n        isMobileView: false,\n        equipment: json[1]\n      }\n    } else {\n      return {\n        isMobileView: true,\n        equipment: json[1]\n      }\n    }\n  }\n  \n  \n  componentDidMount(){\n    this.socket = io('http://localhost:3001/')\n    // this.socket.on('company', this.handleMessage)\n    this.socket.on()\n  }\n  \n  componentWillUnmount(){\n    this.socket.close()\n  }\n\n  handleMessage = message => {\n    this.setState(state => {\n      messages: state.messages\n    })\n  }\n\n  render(){\n    return(\n        this.props.isMobileView ?\n        <MobileLayout company_name=\"Doghouse Oil & Gas\" site_name=\"Anchor Battery\">\n            {\n              this.props.equipment.map(equip => (\n                <Details \n                key={equip.id} \n                name={equip.name}\n                currentValue={equip.currentLevel}\n                totalValue={equip.totalLevel}\n                alarmOn={equip.on_level}\n                alarmOff={equip.off_level}\n                mon={equip.monValue}\n                tue={equip.tueValue}\n                wed={equip.wedValue}\n                thu={equip.thuValue}\n                fri={equip.friValue}\n                sat={equip.satValue}\n                sun={equip.sunValue}\n                />\n                ))\n            }\n          </MobileLayout>\n        :\n          <Layout company_name=\"Doghouse Oil & Gas\" site_name=\"Anchor Battery\">\n            {\n              this.props.equipment.map(equip => (\n                <Details \n                key={equip.id} \n                name={equip.name}\n                currentValue={equip.currentLevel}\n                totalValue={equip.totalLevel}\n                alarmOn={equip.on_level}\n                alarmOff={equip.off_level}\n                mon={equip.monValue}\n                tue={equip.tueValue}\n                wed={equip.wedValue}\n                thu={equip.thuValue}\n                fri={equip.friValue}\n                sat={equip.satValue}\n                sun={equip.sunValue}\n                />\n                ))\n            }\n          </Layout>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}