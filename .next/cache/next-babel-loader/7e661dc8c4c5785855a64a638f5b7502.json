{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport MobileLayout from '../components/MobileLayout';\nimport Details from '../components/Details';\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\nimport useMobileDetect from 'use-mobile-detect-hook';\nimport { color } from '../public/screensizes';\n\nvar Home = function Home(props) {\n  return __jsx(React.Fragment, null, props.isMobileView ? __jsx(MobileLayout, {\n    company_name: \"Doghouse Oil & Gas\",\n    site_name: \"Anchor Battery\"\n  }, props.equipment.map(function (equip) {\n    return __jsx(Details, {\n      key: equip.id,\n      name: equip.name,\n      currentValue: equip.currentLevel,\n      totalValue: equip.totalLevel,\n      alarmOn: equip.on_level,\n      alarmOff: equip.off_level\n    });\n  })) : __jsx(Layout, {\n    company_name: \"Doghouse Oil & Gas\",\n    site_name: \"Anchor Battery\"\n  }, props.equipment.map(function (equip) {\n    return __jsx(Details, {\n      key: equip.id,\n      name: equip.name,\n      currentValue: equip.currentLevel,\n      totalValue: equip.totalLevel,\n      alarmOn: equip.on_level,\n      alarmOff: equip.off_level\n    });\n  })));\n};\n\nHome.getInitialProps = function _callee(ctx) {\n  var _ctx$query, name, site, res, json, isMobileView;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ctx$query = ctx.query, name = _ctx$query.name, site = _ctx$query.site;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://jct-systems.com/api/\".concat(name, \"/\").concat(site)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          json = _context.sent;\n          console.log(json);\n          isMobileView = ctx.req.headers['user-agent'].search(/Android|iPhone/i);\n\n          if (!(isMobileView < 0)) {\n            _context.next = 13;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            isMobileView: false,\n            equipment: json[1]\n          });\n\n        case 13:\n          return _context.abrupt(\"return\", {\n            isMobileView: true,\n            equipment: json[1]\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}